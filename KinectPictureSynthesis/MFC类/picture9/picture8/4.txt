4.1系统开发的软件环境
    本项研究以PHPStorm为开发环境，以MySQL为数据库，Apache作为Web服务器软件,使用H5+JS+CSS3+BootStrap+JQuery进行前端开发，最终采用PHP编程语言实现了基于多权限的综合教务成绩查询管理系统。
4.1.1硬件环境
    本项目采用Intel的i5，双核7200功耗，主频2.5GHZ的核心处理器以及windows7操作系统作为硬件环境。我们使用的PhpStorm是一个轻量级且便捷的PHP IDE，其旨在提高用户效率，可深刻理解用户的编码，提供智能代码补全，快速导航以及即时错误检查。

4.2权限管理
4.2.1RBAC模型 
   本项目采用RBAC模型进行权限管理。RBAC作为传统访问控制的有前景的代替，因而受到广泛的关注。在RBAC中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限，不同的角色对应于不同的权限，同样在登录数据库系统后也对应不同的界面。这就极大地简化了权限的管理。在一个组织中，角色是为了完成各种工作而创造，用户则依据它的责任和资格来被指派相应的角色，用户可以很容易地从一个角色被指派到另一个角色。角色可依新的需求和系统的合并而赋予新的权限，而权限也可根据需要而从某角色中回收。角色与角色的关系可以建立起来以涵盖更广泛的客观情况。
4.2.2权限类型
   本项目的权限分为3种：管理员权限，学生权限，老师权限。
   一，管理员权限
    管理员权限可以对学生权限和老师权限进行统一管理，可以查询学生和老师的信息，并进行插入，删除等操作，管理员权限一般归学校管理者拥有。
   二，学生权限
    学生权限是有学生账号登录，可以查看学生的选课信息，考试成绩
   三，老师权限
    老师权限是由老师账号登录，老师可以查看自己的教授课程，以及为自己叫的学生打分。

4.3模式
4.3.1关系模式
   本系统的模式有五张基本关系表组成，分别为：课程表（id,课程名，课程编号，课本），角色表（id,角色名），用户表（id,用户名，密码，是否为管理员），用户课程表（id,uid，cid，分数），用户角色表（id,uid，role_id）。
4.3.2参照结构
   本模式下个基本关系表的参照情况为：
       用户课程表作为参照表，课程表和用户表作为被参照表；
       用户角色表作为参照表，用户表和角色表作为被参照表。
	

4.4范式说明
   一，课程表
	属性为id,课程名，课程编号，课本。id为主键，课程名，课程编号，课本依赖于id，课程名，课程编号，课本之间不存在依赖关系，故符合第三范式。
  二，角色表
	属性为id,角色名。id为主键，角色名依赖于id，故符合第三范式。
  三，用户表
	属性为id,用户名，密码，是否为管理员。id为主键，用户名，密码，是否为管理员依赖于id，用户名，密码，是否为管理员之间不存在依赖关系，故符合第三范式。
  四，用户课程表
	属性为id,uid，cid，分数，其中uid为用户表的逻辑主键，cid为课程表的逻辑主键。id为主键，uid，cid，分数依赖于id，uid，cid，分数之间不存在依赖关系，故符合第三范式。
  五，用户角色表
	属性为id,uid，role_id，其中uid为用户表的逻辑主键，role_id为角色表的逻辑主键。id为主键，uid，role_id依赖于id，uid，role_id之间不存在依赖关系，故符合第三范式。
  综合以上五张表，本数据库系统整体符合第三范式，利用模式分解克服了部分依赖和传递依赖。













	
   